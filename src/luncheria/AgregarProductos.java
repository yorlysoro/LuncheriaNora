/*
 * Copyright 2019 yorlysoro <yorlysoro@gmail.com>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package luncheria;

import VALIDACION.Validacion;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import javax.swing.JOptionPane;

/**
 * Esta ventana se encarga de seleccionar los productos que van a ser agregados en la factura,
 * consulta a la base de datos y luego llena los combobox con la informacion obtenida, primero 
 * se carga la informacion del combobox de categorias, para que este mismo una vez seleccionado 
 * uno de sus elementos pueda proceder a cargar el nombre en el combobox correspondiente, una vez
 * cargado el combobox de nombre el usuario puede seleccionar el nombre del producto que se desea vender
 * y al ser seleccionado uno de los nombres, se procede a cargar la informacion del producto en nuestro caso
 * la descripcion y el precio del producto, luego el usuario puede proceder a cargar la informacion en la factura
 * pulsando en el boton aceptar, para realizar esta carga de informacion se llama a un metodo que esta en la ventana padre
 * llamada factura, el metodo llamado setjTable1 el cual se le pasa como parametro el codigo del producto que permitira 
 * ser buscado en la ventana padre para luego proceder a la carga de la informacion en la factura.

*/
/**
 *
 * @author giovanni
 */
public class AgregarProductos extends javax.swing.JDialog {
   private factura ventana;
    private basedatos bd;
     private javax.swing.JTextField[] lcampos = new javax.swing.JTextField[1];
     private javax.swing.JComboBox[] lcombox = new javax.swing.JComboBox[2];
     private VALIDACION.Validacion vadid = new Validacion();
    private int cant;
    /**
     * Creates new form AgregarProductos
     */
      /**
     * Constructor de la clase AgregarProductos
     * Recibe como parametros el padre, el modal, la clase factura y la base de datos
     */
    public AgregarProductos(java.awt.Frame parent, boolean modal, factura ventana, basedatos bd) {
        super(parent, modal);
        BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Iniciando la ventana AgregarProductos");

        this.ventana = ventana;
        this.bd = bd;
       
        initComponents();
        this.setLocationRelativeTo(null);
        lcampos[0] = textCantidad;
        lcombox[0] = comboCategoria;
        lcombox[1] = comboNombre;
        
        this.LlenarComboCategoria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCategoria = new javax.swing.JLabel();
        comboCategoria = new javax.swing.JComboBox<>();
        lblNombre = new javax.swing.JLabel();
        comboNombre = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDescripcion = new javax.swing.JTextArea();
        lblDescripcion = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        lblPrecio2 = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        textCantidad = new javax.swing.JTextField();
        registrousuario = new javax.swing.JLabel();
        JBtn_aceptar = new javax.swing.JButton();
        JBtn_salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Producto");
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setName("Producto"); // NOI18N
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        lblCategoria.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        lblCategoria.setText("Categoria:");

        comboCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE" }));
        comboCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCategoriaItemStateChanged(evt);
            }
        });

        lblNombre.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        lblNombre.setText("Nombre:");

        comboNombre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE" }));
        comboNombre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboNombreItemStateChanged(evt);
            }
        });

        textDescripcion.setEditable(false);
        textDescripcion.setColumns(20);
        textDescripcion.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        textDescripcion.setRows(5);
        textDescripcion.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        textDescripcion.setEnabled(false);
        jScrollPane1.setViewportView(textDescripcion);

        lblDescripcion.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        lblDescripcion.setText("Descripcion");

        lblPrecio.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        lblPrecio.setText("Precio:");

        lblPrecio2.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N

        lblCantidad.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        lblCantidad.setText("Cantidad:");

        textCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCantidadActionPerformed(evt);
            }
        });
        textCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textCantidadKeyPressed(evt);
            }
        });

        registrousuario.setFont(new java.awt.Font("Malgun Gothic", 3, 30)); // NOI18N
        registrousuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        registrousuario.setText("Cargar Servicios");

        JBtn_aceptar.setBackground(new java.awt.Color(51, 102, 255));
        JBtn_aceptar.setFont(new java.awt.Font("MOAM91", 1, 14)); // NOI18N
        JBtn_aceptar.setForeground(new java.awt.Color(255, 255, 255));
        JBtn_aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/274-checkmark2hover.png"))); // NOI18N
        JBtn_aceptar.setText("ACEPTAR");
        JBtn_aceptar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), java.awt.Color.white, java.awt.Color.white));
        JBtn_aceptar.setFocusPainted(false);
        JBtn_aceptar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/274-checkmark2.png"))); // NOI18N
        JBtn_aceptar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/274-checkmark2.png"))); // NOI18N
        JBtn_aceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBtn_aceptarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBtn_aceptarMouseExited(evt);
            }
        });
        JBtn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtn_aceptarActionPerformed(evt);
            }
        });

        JBtn_salir.setBackground(new java.awt.Color(51, 102, 255));
        JBtn_salir.setFont(new java.awt.Font("MOAM91", 1, 14)); // NOI18N
        JBtn_salir.setForeground(new java.awt.Color(255, 255, 255));
        JBtn_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salida.png"))); // NOI18N
        JBtn_salir.setText("     SALIR");
        JBtn_salir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), java.awt.Color.white, java.awt.Color.white));
        JBtn_salir.setFocusPainted(false);
        JBtn_salir.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/277-exithover.png"))); // NOI18N
        JBtn_salir.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/277-exithover.png"))); // NOI18N
        JBtn_salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBtn_salirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBtn_salirMouseExited(evt);
            }
        });
        JBtn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtn_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registrousuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblCantidad)
                                .addGap(21, 21, 21)
                                .addComponent(textCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblPrecio)
                                .addGap(45, 45, 45)
                                .addComponent(lblPrecio2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblCategoria)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNombre)
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDescripcion)
                                    .addComponent(comboNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(JBtn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(JBtn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 27, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(registrousuario, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoria)
                    .addComponent(comboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPrecio)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDescripcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblPrecio2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textCantidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBtn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBtn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
/**
     * Metodo comboCategoriaItemStateChanged
     * Se encarga de cambiar el contenido del combobox nombre
     * cada vez que es seleccionado una de sus items
     * @param evt 
     */
    private void comboCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCategoriaItemStateChanged
        // TODO add your handling code here:
         try{
            this.bd.Conectar();
            ResultSet result;
            
            for(int i = 1; i < this.comboNombre.getItemCount(); i++)
               this.comboNombre.removeItemAt(i);
            String categoria = "";
            switch(String.valueOf(this.comboCategoria.getSelectedItem())){
                case "Comida" : categoria = "1"; break;
                case "Bebidas" : categoria = "2"; break;
                case "Golosinas" : categoria = "3"; break;
            }
            if(String.valueOf(this.comboCategoria.getSelectedItem()).equalsIgnoreCase("COMIDA")){
                System.out.println("En comida y categoria vale " + categoria);
                this.bd.setResult("SELECT nombre FROM productos WHERE Categorias='" + categoria + "' and status='1'");
                result = this.bd.getResult();
                while(result.next()){
                    this.comboNombre.addItem(""+result.getString(1));
                }
            }else if(String.valueOf(this.comboCategoria.getSelectedItem()).equalsIgnoreCase("BEBIDAS")){
                 this.bd.setResult("SELECT nombre FROM productos WHERE Categorias='" + categoria + "' and status='1'");
                result = this.bd.getResult();
                while(result.next()){
                    this.comboNombre.addItem(""+result.getString(1));
                }
            }else if(String.valueOf(this.comboCategoria.getSelectedItem()).equalsIgnoreCase("GOLOSINAS")){
                 this.bd.setResult("SELECT nombre FROM productos WHERE Categorias='" + categoria + "' and status='1'");
                result = this.bd.getResult();
                while(result.next()){
                    this.comboNombre.addItem(""+result.getString(1));
                }
             
                     
                
                            
            }
            //this.bd.Close();
        } catch (SQLException ex){
           BitacoraVentanas.LOG_RAIZ.log(Level.CONFIG, "Error en cargar listado de nombres de productos: '{'0'}'", ex.getMessage());

        }
    }//GEN-LAST:event_comboCategoriaItemStateChanged
  /**
     * Metodo comboNombreItemStateChanged
     * Se encarga de llenar los campos descripcion y precio
     * cada vez que es seleccionado una de sus items
     * @param evt 
     */
    private void comboNombreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboNombreItemStateChanged
        // TODO add your handling code here:
         try{
            this.bd.Conectar();
            ResultSet result;
            if(!String.valueOf(this.comboNombre.getSelectedItem()).equalsIgnoreCase("SELECCIONE")){
                System.out.println(String.valueOf(this.comboNombre.getSelectedItem()));
                this.bd.setResult("SELECT Descripcion, Precio, Cant FROM productos WHERE  nombre='" + String.valueOf(this.comboNombre.getSelectedItem()) + "' and status = '1' " );
                result = this.bd.getResult();
                if(result.next()){
                    this.textDescripcion.setText(""+result.getString(1));
                    this.lblPrecio2.setText(""+result.getString(2));
                    this.cant = result.getInt(3);
                }
            }
        }catch(SQLException ex){
         BitacoraVentanas.LOG_RAIZ.log(Level.CONFIG, "Error al cargar la descripcion de un producto: {0}", ex.getMessage());

        }
                
    }//GEN-LAST:event_comboNombreItemStateChanged

    private void textCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCantidadKeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_textCantidadKeyPressed

    private void JBtn_aceptarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBtn_aceptarMouseEntered
        JBtn_aceptar.setBackground( new Color(255,255,255));
        JBtn_aceptar.setForeground(new Color(0,0,0));

    }//GEN-LAST:event_JBtn_aceptarMouseEntered

    private void JBtn_aceptarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBtn_aceptarMouseExited
        JBtn_aceptar.setBackground( new Color(51,102,255));
        JBtn_aceptar.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_JBtn_aceptarMouseExited

    private void JBtn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtn_aceptarActionPerformed
        this.aceptar();
    
        
    }//GEN-LAST:event_JBtn_aceptarActionPerformed

    private void JBtn_salirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBtn_salirMouseEntered
        // TODO add your handling code here:
        JBtn_salir.setBackground( new Color(255,255,255));
        JBtn_salir.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_JBtn_salirMouseEntered

    private void JBtn_salirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBtn_salirMouseExited
        // TODO add your handling code here:
        JBtn_salir.setBackground( new Color(51,102,255));
        JBtn_salir.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_JBtn_salirMouseExited

    private void JBtn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtn_salirActionPerformed
        BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Saliendo de la ventana Agregar productos");

        this.dispose();
    }//GEN-LAST:event_JBtn_salirActionPerformed

    private void textCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCantidadActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtn_aceptar;
    private javax.swing.JButton JBtn_salir;
    private javax.swing.JComboBox<String> comboCategoria;
    private javax.swing.JComboBox<String> comboNombre;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblPrecio2;
    private javax.swing.JLabel registrousuario;
    private javax.swing.JTextField textCantidad;
    private javax.swing.JTextArea textDescripcion;
    // End of variables declaration//GEN-END:variables
   /**
     * Metodo aceptar
     * Se encarga de extraer la informacion de los combobox categoria, nombre y de los campos descripcion,
     * para luego proceder a una busqueda en la base de datos del codigo del producto para luego pasarlo
     * como parametro al metodo de la clase padre.
     */
    private void aceptar() {
        if(Integer.valueOf(this.textCantidad.getText()) > this.cant){
            JOptionPane.showMessageDialog(this, "Error");
            return;
        }
        if(this.vadid.campos(lcampos) && this.vadid.combox(lcombox) && !this.textCantidad.getText().equalsIgnoreCase("")){
      String Datos[] = new String[8];
        Datos[1] = String.valueOf(this.comboCategoria.getSelectedItem());
        Datos[2] = String.valueOf(this.comboNombre.getSelectedItem());
        Datos[3] = this.textDescripcion.getText();
        Datos[4] = this.lblPrecio2.getText();
        Datos[5] = this.textCantidad.getText();
        Datos[6] = String.valueOf(Double.valueOf(this.lblPrecio2.getText()) * Integer.valueOf(this.textCantidad.getText()));
        Datos[7] = String.valueOf(Double.valueOf(Datos[6]) * 0.16);
        try{
            String categoria = "";
            switch(String.valueOf(this.comboCategoria.getSelectedItem())){
                case "Comida" : categoria = "1"; break;
                case "Bebidas" : categoria = "2"; break;
                case "Golosinas" : categoria = "3"; break;
            }
        this.bd.Conectar();
        this.bd.setResult("SELECT codigo from productos WHERE Categorias='" + categoria + "' and nombre='" + 
                String.valueOf(this.comboNombre.getSelectedItem()) +  "' and Descripcion='" + this.textDescripcion.getText() + "' and status='1'");
        ResultSet result = this.bd.getResult();
        if(result != null){
            while(result.next()){
                Datos[0] = result.getString(1);
            }
        }
        } catch(SQLException ex){
           BitacoraVentanas.LOG_RAIZ.log(Level.CONFIG, "Error al enviar datos a la ventana padre: {0}", ex.getMessage());

        }
        this.ventana.setjTable1(Datos);
        this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Por favor llene todos los campos!!", "Error", JOptionPane.ERROR_MESSAGE);
            BitacoraVentanas.LOG_RAIZ.log(Level.WARNING, "Error al llenar los campos");
        }
    }
 /**
     * Metodo LlenarComboCategoria
     * Se enecarga de la carga de informacion en el combobox categoria,
     * por medio de una consulta a la base de datos.
     */
    private void LlenarComboCategoria() {
        int items = this.comboCategoria.getItemCount();
        for(int i = 1; i < items; i++)
           this.comboCategoria.removeItemAt(i);
        try{
            this.bd.Conectar();
            this.bd.setResult("SELECT nombre FROM categoria");
            ResultSet result = this.bd.getResult();
            while(result.next()){
                this.comboCategoria.addItem(result.getString(1));
            }
        } catch(SQLException ex){
            BitacoraVentanas.LOG_RAIZ.log(Level.CONFIG, "Error al cargar datos en un combobox: {0}", ex.getMessage());

        }
    }


   
}
