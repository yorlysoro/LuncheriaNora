/*
 * Copyright 2019 yorlysoro <yorlysoro@gmail.com>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package luncheria;

import java.awt.Color;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import sun.java2d.pipe.SpanShapeRenderer;

/**
 *
 * @author Jerrinson
 */
public class Reportes_new extends javax.swing.JFrame {
    private basedatos bd;
    private String nomb_user;
    private String cod_nivel;
    /**
     * Creates new form Reportes_new
     */
    public Reportes_new(basedatos bd, String nomb_user, String cod_nivel) {
        initComponents();
        this.bd = bd;
        this.nomb_user = nomb_user;
        this.cod_nivel = cod_nivel;
        this.fechaFinal.setVisible(false);
        this.fechaIni.setVisible(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        JBtn_generar = new javax.swing.JButton();
        fechaIni = new com.toedter.calendar.JDateChooser();
        fechaFinal = new com.toedter.calendar.JDateChooser();
        comboReportes = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reportes");
        setPreferredSize(new java.awt.Dimension(420, 530));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Malgun Gothic", 3, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Reportes");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(100, 20, 200, 50);

        JBtn_generar.setBackground(new java.awt.Color(51, 102, 255));
        JBtn_generar.setFont(new java.awt.Font("MOAM91", 1, 14)); // NOI18N
        JBtn_generar.setForeground(new java.awt.Color(255, 255, 255));
        JBtn_generar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/274-checkmark2hover.png"))); // NOI18N
        JBtn_generar.setText("   GENERAR");
        JBtn_generar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), java.awt.Color.white, java.awt.Color.white));
        JBtn_generar.setEnabled(false);
        JBtn_generar.setFocusPainted(false);
        JBtn_generar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/274-checkmark2.png"))); // NOI18N
        JBtn_generar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/274-checkmark2.png"))); // NOI18N
        JBtn_generar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JBtn_generarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JBtn_generarMouseExited(evt);
            }
        });
        JBtn_generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtn_generarActionPerformed(evt);
            }
        });
        jPanel1.add(JBtn_generar);
        JBtn_generar.setBounds(110, 390, 200, 60);

        fechaIni.setDateFormatString("yyyy/MM/dd");
        jPanel1.add(fechaIni);
        fechaIni.setBounds(40, 200, 150, 30);

        fechaFinal.setDateFormatString("yyyy/MM/dd");
        jPanel1.add(fechaFinal);
        fechaFinal.setBounds(230, 200, 140, 30);

        comboReportes.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        comboReportes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "REPORTES DE PRODUCTOS", "REPORTES DE CLIENTE", "REPORTES DE USUARIOS", "FACTURAS" }));
        comboReportes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboReportesItemStateChanged(evt);
            }
        });
        jPanel1.add(comboReportes);
        comboReportes.setBounds(40, 130, 330, 40);

        jLabel2.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Seleccionar Reporte");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 90, 180, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBtn_generarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBtn_generarMouseEntered
        JBtn_generar.setBackground( new Color(255,255,255));
        JBtn_generar.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_JBtn_generarMouseEntered

    private void JBtn_generarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBtn_generarMouseExited
        JBtn_generar.setBackground( new Color(51,102,255));
        JBtn_generar.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_JBtn_generarMouseExited

    private void JBtn_generarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtn_generarActionPerformed
    this.reportes();
    }//GEN-LAST:event_JBtn_generarActionPerformed

    private void comboReportesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboReportesItemStateChanged
        // TODO add your handling code here:
        if(!String.valueOf(this.comboReportes.getSelectedItem()).equalsIgnoreCase("SELECCIONAR") && String.valueOf(this.comboReportes.getSelectedItem()).equalsIgnoreCase("FACTURAS")){
           
           this.fechaIni.setVisible(true);
            this.fechaFinal.setVisible(true);
        }else {
            this.fechaIni.setVisible(false);
            this.fechaFinal.setVisible(false);
        }
        if(!String.valueOf(this.comboReportes.getSelectedItem()).equalsIgnoreCase("SELECCIONAR")){
            this.JBtn_generar.setEnabled(true);
        }else{
            this.JBtn_generar.setEnabled(false);
        }
        
    }//GEN-LAST:event_comboReportesItemStateChanged

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtn_generar;
    private javax.swing.JComboBox<String> comboReportes;
    private com.toedter.calendar.JDateChooser fechaFinal;
    private com.toedter.calendar.JDateChooser fechaIni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    
    private void reportes() {
        this.bd.Conectar();
        if(String.valueOf(this.comboReportes.getSelectedItem()).equalsIgnoreCase("REPORTES DE PRODUCTOS")){
            try{
           String ubicacion = new File("src/Reportes_Luncheria/Reportes_productos.jasper").getAbsolutePath();
            System.out.println(ubicacion);
            JasperPrint jasperPrintWindow = JasperFillManager.fillReport(ubicacion, null, this.bd.getCon());
            JasperViewer jasperViewer = new JasperViewer(jasperPrintWindow,false);
            jasperViewer.setVisible(true);
            BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Reporte generado correctamente");

       } catch (Exception ex) {
           BitacoraVentanas.LOG_RAIZ.log(Level.SEVERE, "Error al cargar el reporte de cliente");
           JOptionPane.showMessageDialog(this, "Error al cargar el reporte: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
    }
        }
        else if(String.valueOf(this.comboReportes.getSelectedItem()).equalsIgnoreCase("REPORTES DE CLIENTE")){
                    try{
                 String ubicacion = new File("src/Reportes_Luncheria/Reportes_cliente.jasper").getAbsolutePath();
                 
                    JasperPrint jasperPrintWindow = JasperFillManager.fillReport(ubicacion, null, this.bd.getCon());
                     JasperViewer jasperViewer = new JasperViewer(jasperPrintWindow,false);
                     jasperViewer.setVisible(true);

                     BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Reporte generado correctamente");

             } catch (Exception ex) {
                 BitacoraVentanas.LOG_RAIZ.log(Level.SEVERE, "Error al cargar el reporte de cliente");
                 JOptionPane.showMessageDialog(this, "Error al cargar el reporte: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
          }
        } else if(String.valueOf(this.comboReportes.getSelectedItem()).equalsIgnoreCase("REPORTES DE USUARIOS")){
             try{
           String ubicacion = new File("src/Reportes_Luncheria/Reportes_usuario.jasper").getAbsolutePath();
        
       JasperPrint jasperPrintWindow = JasperFillManager.fillReport(ubicacion, null, this.bd.getCon());
        JasperViewer jasperViewer = new JasperViewer(jasperPrintWindow,false);

	jasperViewer.setVisible(true);
        BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Reporte generado correctamente");
    
       } catch (Exception ex) {
           BitacoraVentanas.LOG_RAIZ.log(Level.SEVERE, "Error al cargar el reporte de cliente");
           JOptionPane.showMessageDialog(this, "Error al cargar el reporte: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        } else if(String.valueOf(this.comboReportes.getSelectedItem()).equalsIgnoreCase("FACTURAS")){
            
             try{
                 String formatoini = this.fechaIni.getDateFormatString();
                 Date fechaIni = this.fechaIni.getDate();
                 SimpleDateFormat formatDateIni = new SimpleDateFormat(formatoini);
                 String fechaini = String.valueOf(formatDateIni.format(fechaIni));
                
                 String formatofin = this.fechaFinal.getDateFormatString();
                 Date fechaFin = this.fechaFinal.getDate();
                 SimpleDateFormat formatDateFin = new SimpleDateFormat(formatofin);
                 String fechafin = String.valueOf(formatDateFin.format(fechaFin));
                 
                 
           String ubicacion = new File("src/Reportes_Luncheria/Rangof_factura.jasper").getAbsolutePath();
           Map<String, Object> parametros = new HashMap<>();
           
           parametros.put("fechai", this.cambiarFecha(fechaini.toCharArray()));
           parametros.put("fechaf", this.cambiarFecha(fechafin.toCharArray()));
       JasperPrint jasperPrintWindow = JasperFillManager.fillReport(ubicacion, parametros, this.bd.getCon());
        JasperViewer jasperViewer = new JasperViewer(jasperPrintWindow,false);

	jasperViewer.setVisible(true);
        BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Reporte generado correctamente");
    
       } catch (Exception ex) {
           BitacoraVentanas.LOG_RAIZ.log(Level.SEVERE, "Error al cargar el reporte de cliente");
           JOptionPane.showMessageDialog(this, "Error seleccione las fechas", "Error", JOptionPane.ERROR_MESSAGE);
        }
            
        }
    }

    private String cambiarFecha(char[] toCharArray) {
        char[] new_date = new char[toCharArray.length];
        for(int i = 0; i < toCharArray.length; i++){
            if(toCharArray[i] == '/')
                new_date[i] = '-';
            else
                new_date[i] = toCharArray[i];
        }
        return String.valueOf(new_date);
    }

  
}
