/*
 * Copyright 2019 yorlysoro <yorlysoro@gmail.com>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package luncheria;

import VALIDACION.Validacion;
import VALIDACION.limitar;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author giovanni
 */
public class factura extends javax.swing.JFrame {
    /**
     * Creates new form factura2
     */
   private basedatos bd;
   private String cod;
   private String nomb_user;
   private String cod_user;
 
     private javax.swing.JTextField[] lcampos = new javax.swing.JTextField[3];
     private VALIDACION.Validacion vadid = new Validacion();
     private DefaultTableModel tabla; 
      private Calendar Cal;
      private String fec;
      private double base_i;
      private double total_f;
      private  double iva_f;
      private String cod_f;
      private String ced;
     
    public factura(basedatos bd, String nomb_user, String cod_nivel) {
        this.bd = bd;
        this.Cal = Calendar.getInstance();
        this.fec =Cal.get(Cal.DATE)+"/"+(Cal.get(Cal.MONTH)+1)+"/"+ Cal.get(Cal.YEAR);
        BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Iniciando la ventana factura");

        this.cod_user = cod_nivel;
        this.nomb_user = nomb_user;
       
        this.iva_f = 0;
        this.total_f = 0;
        this.base_i = 0;
        initComponents();
        this.setLocationRelativeTo(null);
        this.tabla = (DefaultTableModel) tablaFactura.getModel();
        this.fechaf.setText(fec);
        this.textVendedor.setText(nomb_user);
        this.AsignarCod_Fact();
        lcampos[0] = textcedula;
        lcampos[1] = textCliente;
        lcampos[2] = textDireccion;
        this.JBtn_activar.setVisible(false);
        SNumeros(textcedula);
        SLetras(textCliente);
        SLetras(textDireccion);
        this.verificarUsuario(cod_nivel);
      
    }

  public void setCod_f(String cod_f) {
        this.cod_f = cod_f;
    }

    public void setCed(String ced) {
        this.ced = ced;
    }
    
     //METODO PARA VALIDAR QUE LA ENTRADA DE DATOS A LAS CASILLAS DE TEXTOS SEA SOLO NUMEROS   
    public void SNumeros (JTextField a)
    {
        a.addKeyListener(new KeyAdapter()
        {
            public void keyTyped( KeyEvent e)
            {
                char c=e. getKeyChar();
                if(!Character.isDigit(c))
                {
                    getToolkit().beep();;
                    e.consume();
                }
            }
        });
           
    }
     //METODO PARA VALIDAR QUE LA ENTRADA DE DATOS A LAS CASILLAS DE TEXTOS SEA SOLO LETRAS   
     public void SLetras (JTextField a)
    {
        a.addKeyListener(new KeyAdapter()
        {
            public void keyTyped( KeyEvent e)
            {
                char c=e. getKeyChar();
                if(!Character.isLetter(c) && !Character.isWhitespace(c))
                {
                    getToolkit().beep();;
                    e.consume();
                }
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     /**
     * @param args the command line arguments
     */

    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fondo = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        DetalleFactura = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        textVendedor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textcedula = new javax.swing.JTextField();
        consultar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textCliente = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        textDireccion = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaFactura = new javax.swing.JTable();
        imprimir = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        total_facturav = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        ivat_facturav = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Status = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        numerofact = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        fechaf = new javax.swing.JTextField();
        cargarPedido = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        consulta_fac = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        JBtn_activar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        Fondo.setBackground(new java.awt.Color(51, 153, 255));
        Fondo.setMinimumSize(new java.awt.Dimension(940, 750));
        Fondo.setLayout(null);

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Malgun Gothic", 3, 30)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Factura");
        Fondo.add(jLabel9);
        jLabel9.setBounds(0, 0, 170, 40);

        DetalleFactura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        DetalleFactura.setOpaque(false);
        DetalleFactura.setLayout(null);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Vendedor");
        DetalleFactura.add(jLabel7);
        jLabel7.setBounds(30, 130, 70, 20);

        textVendedor.setEditable(false);
        textVendedor.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        textVendedor.setForeground(new java.awt.Color(255, 255, 255));
        textVendedor.setBorder(null);
        textVendedor.setOpaque(false);
        textVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textVendedorActionPerformed(evt);
            }
        });
        DetalleFactura.add(textVendedor);
        textVendedor.setBounds(110, 131, 350, 20);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("C.I.");
        DetalleFactura.add(jLabel4);
        jLabel4.setBounds(30, 10, 30, 20);

        textcedula.setBackground(new java.awt.Color(240, 240, 240));
        textcedula.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        textcedula.setForeground(new java.awt.Color(255, 255, 255));
        textcedula.setBorder(null);
        textcedula.setOpaque(false);
        textcedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textcedulaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textcedulaKeyTyped(evt);
            }
        });
        DetalleFactura.add(textcedula);
        textcedula.setBounds(110, 10, 210, 20);

        consultar.setBackground(new java.awt.Color(255, 255, 255));
        consultar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        consultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/consultaci.png"))); // NOI18N
        consultar.setBorder(null);
        consultar.setBorderPainted(false);
        consultar.setContentAreaFilled(false);
        consultar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/consultacihover.png"))); // NOI18N
        consultar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/consultacihover.png"))); // NOI18N
        consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarActionPerformed(evt);
            }
        });
        DetalleFactura.add(consultar);
        consultar.setBounds(330, 0, 140, 40);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cliente");
        DetalleFactura.add(jLabel2);
        jLabel2.setBounds(30, 50, 47, 20);

        textCliente.setBackground(new java.awt.Color(240, 240, 240));
        textCliente.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        textCliente.setForeground(new java.awt.Color(255, 255, 255));
        textCliente.setBorder(null);
        textCliente.setOpaque(false);
        textCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClienteActionPerformed(evt);
            }
        });
        textCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textClienteKeyTyped(evt);
            }
        });
        DetalleFactura.add(textCliente);
        textCliente.setBounds(110, 50, 350, 20);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Direccion");
        DetalleFactura.add(jLabel8);
        jLabel8.setBounds(30, 90, 70, 20);

        textDireccion.setBackground(new java.awt.Color(240, 240, 240));
        textDireccion.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        textDireccion.setForeground(new java.awt.Color(255, 255, 255));
        textDireccion.setBorder(null);
        textDireccion.setOpaque(false);
        textDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDireccionActionPerformed(evt);
            }
        });
        textDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textDireccionKeyTyped(evt);
            }
        });
        DetalleFactura.add(textDireccion);
        textDireccion.setBounds(110, 90, 350, 20);

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/036-profile.png"))); // NOI18N
        DetalleFactura.add(jLabel28);
        jLabel28.setBounds(10, 10, 20, 20);

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/114-user.png"))); // NOI18N
        DetalleFactura.add(jLabel29);
        jLabel29.setBounds(10, 50, 20, 20);

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/073-location2.png"))); // NOI18N
        DetalleFactura.add(jLabel30);
        jLabel30.setBounds(10, 90, 20, 20);

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/119-user-tie.png"))); // NOI18N
        DetalleFactura.add(jLabel31);
        jLabel31.setBounds(10, 130, 20, 20);

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        DetalleFactura.add(jSeparator1);
        jSeparator1.setBounds(110, 150, 350, 10);

        jSeparator7.setForeground(new java.awt.Color(255, 255, 255));
        DetalleFactura.add(jSeparator7);
        jSeparator7.setBounds(110, 30, 210, 10);

        jSeparator9.setForeground(new java.awt.Color(255, 255, 255));
        DetalleFactura.add(jSeparator9);
        jSeparator9.setBounds(110, 110, 350, 10);

        jSeparator10.setForeground(new java.awt.Color(255, 255, 255));
        DetalleFactura.add(jSeparator10);
        jSeparator10.setBounds(110, 70, 350, 10);

        Fondo.add(DetalleFactura);
        DetalleFactura.setBounds(10, 50, 690, 180);

        tablaFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Categoria", "Nombre", "Descripcion", "Precio", "Cantidad", "Subtotal", "IVA"
            }
        ));
        tablaFactura.setSelectionForeground(new java.awt.Color(153, 204, 255));
        jScrollPane1.setViewportView(tablaFactura);

        Fondo.add(jScrollPane1);
        jScrollPane1.setBounds(10, 240, 710, 170);

        imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/printer.png"))); // NOI18N
        imprimir.setBorderPainted(false);
        imprimir.setContentAreaFilled(false);
        imprimir.setDefaultCapable(false);
        imprimir.setFocusPainted(false);
        imprimir.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/printerHover.png"))); // NOI18N
        imprimir.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/printerHover.png"))); // NOI18N
        imprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imprimirMouseClicked(evt);
            }
        });
        imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirActionPerformed(evt);
            }
        });
        Fondo.add(imprimir);
        imprimir.setBounds(650, 610, 70, 60);

        btnBorrar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btnBorrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBorrar.setBorderPainted(false);
        btnBorrar.setContentAreaFilled(false);
        btnBorrar.setDefaultCapable(false);
        btnBorrar.setFocusPainted(false);
        btnBorrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminarhover.png"))); // NOI18N
        btnBorrar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminarhover.png"))); // NOI18N
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        Fondo.add(btnBorrar);
        btnBorrar.setBounds(490, 630, 140, 60);

        total_facturav.setEditable(false);
        total_facturav.setBackground(new java.awt.Color(0, 0, 0));
        total_facturav.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        total_facturav.setForeground(new java.awt.Color(255, 255, 255));
        total_facturav.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        total_facturav.setText("0,00");
        total_facturav.setBorder(null);
        total_facturav.setOpaque(false);
        total_facturav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_facturavActionPerformed(evt);
            }
        });
        Fondo.add(total_facturav);
        total_facturav.setBounds(140, 570, 140, 20);

        jLabel16.setFont(new java.awt.Font("Malgun Gothic", 1, 24)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Total");
        Fondo.add(jLabel16);
        jLabel16.setBounds(60, 560, 60, 30);

        jLabel15.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Iva");
        Fondo.add(jLabel15);
        jLabel15.setBounds(50, 500, 50, 40);

        ivat_facturav.setEditable(false);
        ivat_facturav.setBackground(new java.awt.Color(0, 0, 0));
        ivat_facturav.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        ivat_facturav.setForeground(new java.awt.Color(255, 255, 255));
        ivat_facturav.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ivat_facturav.setText("0,00");
        ivat_facturav.setBorder(null);
        ivat_facturav.setOpaque(false);
        ivat_facturav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ivat_facturavActionPerformed(evt);
            }
        });
        Fondo.add(ivat_facturav);
        ivat_facturav.setBounds(140, 510, 140, 20);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Malgun Gothic", 3, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("IMPRIMIR");
        Fondo.add(jLabel10);
        jLabel10.setBounds(650, 670, 70, 20);

        Status.setBackground(new java.awt.Color(255, 255, 255));
        Status.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        Status.setForeground(new java.awt.Color(255, 255, 255));
        Status.setText("Status");
        Fondo.add(Status);
        Status.setBounds(650, 0, 40, 20);

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        jTextField3.setBorder(null);
        jTextField3.setEnabled(false);
        jTextField3.setOpaque(false);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        Fondo.add(jTextField3);
        jTextField3.setBounds(650, 20, 40, 20);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Numero Factura");
        Fondo.add(jLabel6);
        jLabel6.setBounds(350, 0, 120, 17);

        numerofact.setEditable(false);
        numerofact.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        numerofact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numerofact.setBorder(null);
        numerofact.setOpaque(false);
        Fondo.add(numerofact);
        numerofact.setBounds(360, 20, 110, 20);

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Fecha");
        Fondo.add(jLabel18);
        jLabel18.setBounds(200, 0, 80, 17);

        fechaf.setEditable(false);
        fechaf.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        fechaf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fechaf.setBorder(null);
        fechaf.setOpaque(false);
        Fondo.add(fechaf);
        fechaf.setBounds(200, 20, 80, 20);

        cargarPedido.setBackground(new java.awt.Color(255, 255, 255));
        cargarPedido.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cargarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CargarServicio.png"))); // NOI18N
        cargarPedido.setBorderPainted(false);
        cargarPedido.setContentAreaFilled(false);
        cargarPedido.setDefaultCapable(false);
        cargarPedido.setFocusPainted(false);
        cargarPedido.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CargarServiciohover.png"))); // NOI18N
        cargarPedido.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CargarServiciohover.png"))); // NOI18N
        cargarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarPedidoActionPerformed(evt);
            }
        });
        Fondo.add(cargarPedido);
        cargarPedido.setBounds(270, 410, 190, 60);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bs.png"))); // NOI18N
        Fondo.add(jLabel1);
        jLabel1.setBounds(20, 560, 32, 40);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bs.png"))); // NOI18N
        Fondo.add(jLabel12);
        jLabel12.setBounds(20, 500, 32, 40);

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        Fondo.add(jSeparator2);
        jSeparator2.setBounds(60, 590, 220, 10);

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Malgun Gothic", 3, 18)); // NOI18N
        jLabel17.setText("BS");
        Fondo.add(jLabel17);
        jLabel17.setBounds(290, 570, 30, 20);

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        Fondo.add(jSeparator4);
        jSeparator4.setBounds(60, 530, 220, 10);

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Malgun Gothic", 3, 18)); // NOI18N
        jLabel25.setText("BS");
        Fondo.add(jLabel25);
        jLabel25.setBounds(290, 510, 30, 20);

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/084-calendar.png"))); // NOI18N
        Fondo.add(jLabel26);
        jLabel26.setBounds(180, 20, 20, 20);

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/info.png"))); // NOI18N
        Fondo.add(jLabel33);
        jLabel33.setBounds(620, 20, 20, 20);

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/186-list-numbered.png"))); // NOI18N
        Fondo.add(jLabel34);
        jLabel34.setBounds(340, 20, 20, 20);

        jSeparator8.setForeground(new java.awt.Color(255, 255, 153));
        Fondo.add(jSeparator8);
        jSeparator8.setBounds(650, 40, 40, 10);

        jSeparator11.setForeground(new java.awt.Color(255, 255, 153));
        Fondo.add(jSeparator11);
        jSeparator11.setBounds(200, 40, 80, 10);

        jSeparator12.setForeground(new java.awt.Color(255, 255, 153));
        Fondo.add(jSeparator12);
        jSeparator12.setBounds(360, 40, 110, 10);

        consulta_fac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/consultaci.png"))); // NOI18N
        consulta_fac.setBorderPainted(false);
        consulta_fac.setContentAreaFilled(false);
        consulta_fac.setFocusPainted(false);
        consulta_fac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consulta_facActionPerformed(evt);
            }
        });
        Fondo.add(consulta_fac);
        consulta_fac.setBounds(470, 10, 140, 30);

        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Guardar.png"))); // NOI18N
        guardar.setBorderPainted(false);
        guardar.setContentAreaFilled(false);
        guardar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Guardarhover.png"))); // NOI18N
        guardar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Guardarhover.png"))); // NOI18N
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        Fondo.add(guardar);
        guardar.setBounds(360, 630, 130, 60);

        JBtn_activar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Btn_activar.png"))); // NOI18N
        JBtn_activar.setBorderPainted(false);
        JBtn_activar.setContentAreaFilled(false);
        JBtn_activar.setFocusPainted(false);
        JBtn_activar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtn_activarActionPerformed(evt);
            }
        });
        Fondo.add(JBtn_activar);
        JBtn_activar.setBounds(210, 630, 140, 60);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 739, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(Fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(Fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  public void setjTable1(String Datos[]) {
         this.tabla.addRow(Datos);
         this.total_f += Double.valueOf(Datos[6]) + Double.valueOf(Datos[7]);
         this.iva_f = this.total_f * 0.16;
         
         this.ivat_facturav.setText(String.format("%.2f", this.iva_f));
         this.total_facturav.setText(String.format("%.2f",this.total_f));
         
    }
    
    private void cargarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarPedidoActionPerformed
        // METODO QUE ME PERMITE LLENAR LA TABLA DE FACTURACION
        if(this.vadid.campos(lcampos))
            new AgregarProductos(this, true, this, this.bd).setVisible(true);
        else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente o factura primero!!!!", "ERROR", JOptionPane.ERROR_MESSAGE);
            BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Error al leer datos del cliente o factura");

        }

    }//GEN-LAST:event_cargarPedidoActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void ivat_facturavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ivat_facturavActionPerformed

    }//GEN-LAST:event_ivat_facturavActionPerformed

    private void total_facturavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_facturavActionPerformed

    }//GEN-LAST:event_total_facturavActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        //HACER EL LLAMADO AL METODO eliminar
     eliminar();
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirActionPerformed
        //HACER EL LLAMADO AL METODO IMPRIMIR imprimir
      this.imprimir();
    }
    
    public void limpiar(){
        this.textcedula.setText("");
        this.textCliente.setText("");
        this.textDireccion.setText("");
        this.ivat_facturav.setText("0,00");
        this.total_facturav.setText("0,00");
        this.Status.setText("");
        for(int i = 0; i < this.tabla.getRowCount(); i++){
            this.tabla.removeRow(i);
        }
        this.AsignarCod_Fact();
    }
    
    public void AsignarCod_Fact(){
         try{
            this.bd.Conectar();
            this.bd.setResult("SELECT count(*) FROM factura");
            ResultSet result = this.bd.getResult();
            while(result.next()){
                this.numerofact.setText(""+String.valueOf(Integer.valueOf(result.getInt(1) + 1)));
            }
            //this.bd.Close();
        }catch (SQLException ex){
            
        }
      
    }//GEN-LAST:event_imprimirActionPerformed

    private void textDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDireccionActionPerformed

    }//GEN-LAST:event_textDireccionActionPerformed

    private void textClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textClienteActionPerformed

    private void consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarActionPerformed
        // METODO QUE ME PERMITE CONSULTAR EL CLIENTE
        
      if(!textcedula.getText().equalsIgnoreCase("")){
            try{
                this.bd.Conectar();
                this.bd.setResult("SELECT * FROM clientes WHERE cedula='" + textcedula.getText() + "'");
                ResultSet result = this.bd.getResult();

                if(!result.next()){
                    String[] opciones = {"SI", "NO"};

                    int opcion = JOptionPane.showOptionDialog(
                        null                             //componente
                        , "EL CLIENTE NO EXISTE DESEA CREARLO?"            // Mensaje
                        , ""         // Titulo en la barra del cuadro
                        , JOptionPane.DEFAULT_OPTION       // Tipo de opciones
                        , JOptionPane.INFORMATION_MESSAGE  // Tipo de mensaje (icono)
                        , null                             // Icono (ninguno)
                        , opciones                         // Opciones personalizadas
                        , null                             // Opcion por defecto
                    );
                    if (opcion == JOptionPane.YES_OPTION){
                        new clientes(this.bd, this.nomb_user, this.cod_user).setVisible(true);
                    }
                }else{
                    this.bd.setResult("SELECT cedula, nombres, apellidos, direccion FROM clientes WHERE cedula = '" +  this.textcedula.getText() + "'");
                    result = this.bd.getResult();
                    while(result.next()){
                        this.textcedula.setText(""+result.getString(1));
                        this.textCliente.setText(""+result.getString(2) + " " + result.getString(3));
                        this.textDireccion.setText(""+result.getString(4));
                    }
                }
                BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Consulta de datos de cliente realizada con exito");

                this.AsignarCod_Fact();
                //this.bd.Close();
            } catch (SQLException ex){
                BitacoraVentanas.LOG_RAIZ.log(Level.CONFIG, "Error al realizar la consulta hacia la base de datos:{0}", ex.getMessage());
            }
        }else{
            new ConsultaFactCliente(this, true, bd, this, this.nomb_user, this.cod_user).setVisible(true);
      }

    }//GEN-LAST:event_consultarActionPerformed

    private void textcedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textcedulaKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            this.consultarActionPerformed(null);
             }
    }//GEN-LAST:event_textcedulaKeyPressed

    private void textVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textVendedorActionPerformed

    private void consulta_facActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consulta_facActionPerformed
        // TODO add your handling code here:
        this.consulta_fact();
    }//GEN-LAST:event_consulta_facActionPerformed

    private void imprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imprimirMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_imprimirMouseClicked

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // SE REALIZA EL LLAMADO HA EL METODO
        this.guardar();
    }//GEN-LAST:event_guardarActionPerformed

    private void JBtn_activarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtn_activarActionPerformed
        // TODO add your handling code here:
        this.activar();
       
    }//GEN-LAST:event_JBtn_activarActionPerformed

    private void textcedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textcedulaKeyTyped
        // TODO add your handling code here:
        if(textcedula.getText().length() == limitar.cedula){
            evt.consume();
        }
    }//GEN-LAST:event_textcedulaKeyTyped

    private void textClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textClienteKeyTyped
        // TODO add your handling code here:
        if(textCliente.getText().length() == limitar.nomapell * 2){
            evt.consume();
        }
    }//GEN-LAST:event_textClienteKeyTyped

    private void textDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDireccionKeyTyped
        // TODO add your handling code here:
        if(textDireccion.getText().length() == limitar.fulltext){
            evt.consume();
        }
    }//GEN-LAST:event_textDireccionKeyTyped

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DetalleFactura;
    private javax.swing.JPanel Fondo;
    private javax.swing.JButton JBtn_activar;
    private javax.swing.JLabel Status;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton cargarPedido;
    private javax.swing.JButton consulta_fac;
    private javax.swing.JButton consultar;
    private javax.swing.JTextField fechaf;
    private javax.swing.JButton guardar;
    private javax.swing.JButton imprimir;
    private javax.swing.JTextField ivat_facturav;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField numerofact;
    javax.swing.JTable tablaFactura;
    private javax.swing.JTextField textCliente;
    private javax.swing.JTextField textDireccion;
    private javax.swing.JTextField textVendedor;
    private javax.swing.JTextField textcedula;
    private javax.swing.JTextField total_facturav;
    // End of variables declaration//GEN-END:variables

    private void imprimir() {
       
       
       if(this.vadid.campos(lcampos) || this.tablaFactura.getRowCount() != 0)
           
        this.report();
       
       else{
            JOptionPane.showMessageDialog(this, "No ha seleccionado la factura!!", "Error", JOptionPane.ERROR_MESSAGE);
            BitacoraVentanas.LOG_RAIZ.log(Level.WARNING, "Error al seleccionar la factura");
       }
           
    }

    public void eliminar() {
         if(!this.vadid.campos(lcampos) || this.tablaFactura.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "No ha seleccionado la factura!!", "Error", JOptionPane.ERROR_MESSAGE);
            BitacoraVentanas.LOG_RAIZ.log(Level.WARNING, "Error al seleccionar la factura");
        }else{
             String[] opciones = {"ACEPTAR", "CANCELAR"};
            int opcion = JOptionPane.showOptionDialog(
                               null                             //componente
                             , "DESEA ELIMINAR LA FACTURA ?"            // Mensaje
                             , "CONFIRMAR"         // Titulo en la barra del cuadro
                             , JOptionPane.DEFAULT_OPTION       // Tipo de opciones
                             , JOptionPane.INFORMATION_MESSAGE  // Tipo de mensaje (icono)
                             , null                             // Icono (ninguno)
                             , opciones                         // Opciones personalizadas
                             , null                             // Opcion por defecto
                           );
        if (opcion == JOptionPane.YES_OPTION){
             try{
                 this.bd.Conectar();
                 this.bd.setStm("UPDATE factura SET status='0' WHERE cod_factura='"+ this.numerofact.getText() + "'");
                 JOptionPane.showMessageDialog(this, "Factura eliminada!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                 //this.bd.Close();
                 this.limpiar();
                 BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Se ha eliminado una factura");

             }catch (SQLException ex){
               BitacoraVentanas.LOG_RAIZ.log(Level.CONFIG, "Error al intentar eliminar una factura", ex.getMessage());

             }
         } else {
            JOptionPane.showMessageDialog(this, "Cancelado!!", "Cancelado", JOptionPane.INFORMATION_MESSAGE);
            BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Eliminacion cancelada");

        }
        }
    }

    private void consulta_fact() {
        try{
        new ConsultaFactura(this, true, bd, this, this.nomb_user, this.cod_user).setVisible(true);
        this.bd.Conectar();
        this.bd.setResult("SELECT cedula,nombres,apellidos,direccion FROM clientes WHERE cedula='" + this.ced +"'");
        ResultSet result = this.bd.getResult();
        if(result != null){
            while(result.next()){
                this.textcedula.setText(""+result.getString(1));
                this.textCliente.setText(""+result.getString(2)+ " " +  result.getString(3));
                this.textDireccion.setText(""+result.getString(4));
            }
        }
        this.bd.setResult("SELECT productos.codigo, categoria.nombre, productos.nombre, productos.Descripcion, productos.Precio, detalle_factura.cant, detalle_factura.precio_venta "
        + " FROM productos, detalle_factura, categoria, factura WHERE factura.cod_factura ='" + this.cod_f + "' and factura.ced_cliente='" + this.ced + "' and detalle_factura.numero_factura='" + this.cod_f + "'"
        + " and categoria.cod = productos.Categorias GROUP BY productos.codigo"
        );
        for(int i = 0; i < this.tabla.getRowCount(); i++){
            this.tabla.removeRow(i);
        }
        result = this.bd.getResult();
        if(result != null){
            String Datos[] = new String[8];
            while(result.next()){
                Datos[0] = (""+result.getString(1));
                Datos[1] = (""+result.getString(2));
                Datos[2] = (""+result.getString(3));
                Datos[3] = (""+result.getString(4));
                Datos[4] = (""+result.getString(5));
                Datos[5] = (""+result.getString(6));
                Datos[6] = (""+result.getString(7));
                Datos[7] = String.valueOf(Double.valueOf(Datos[6]) * 0.16);
                this.setjTable1(Datos);
            }
        }
        this.bd.setResult("SELECT cod_factura, status FROM factura WHERE cod_factura='" + this.cod_f +"'");
        result = this.bd.getResult();
        if(result != null){
            while(result.next()){
                this.numerofact.setText(""+result.getString(1));
                this.Status.setText(""+result.getString(2));
            }
        }
        //this.bd.Close();
        } catch (SQLException ex){
             BitacoraVentanas.LOG_RAIZ.log(Level.CONFIG, "Error al cargar uuna factura:{0}", ex.getMessage());

        }
    }

    private void report() {
            this.bd.Conectar();
        
           
       try{
           String ubicacion = new File("src/Reportes_Luncheria/Reporte_factura.jasper").getAbsolutePath();
           Map<String,Object> parametro = new HashMap<>();
           parametro.put("cod", Integer.valueOf(this.numerofact.getText()));
           parametro.put("cedula", this.textcedula.getText());
       JasperPrint jasperPrintWindow = JasperFillManager.fillReport(ubicacion, parametro, this.bd.getCon());
        JasperViewer jasperViewer = new JasperViewer(jasperPrintWindow, false);

	jasperViewer.setVisible(true);
        BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Reporte generado correctamente");
    
       } catch (Exception ex) {
           BitacoraVentanas.LOG_RAIZ.log(Level.SEVERE, "Error al cargar el reporte de cliente");
           JOptionPane.showMessageDialog(this, "Error al cargar el reporte: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
    }
    }

    void setCod(String cod) {
        this.cod = cod;
        try{
            this.bd.Conectar();
            this.bd.setResult("SELECT nombres,apellidos,direccion FROM clientes WHERE cedula= '"+this.cod+"'");
            ResultSet result = this.bd.getResult();
            while(result.next()){
                this.textcedula.setText(this.cod);
                this.textCliente.setText(""+result.getString(1) + " " + result.getString(2));
                this.textDireccion.setText(""+result.getString(3));           
            }
            
        } catch (SQLException ex){
            BitacoraVentanas.LOG_RAIZ.log(Level.CONFIG, "Error al cargar datos de cliente:{0}", ex.getMessage());

        }
    }

    private void guardar() {
        if(this.vadid.campos(lcampos) && this.tabla.getRowCount() != 0){
            try{
            
          
              String fecha =Cal.get(Calendar.YEAR)+"-"+(Cal.get(Calendar.MONTH)+1)+"-"+Cal.get(Calendar.DATE) ;
          
                this.bd.Conectar();
                
                
                this.bd.setStm("INSERT INTO factura(cod_factura, ced_cliente, fecha, status)"
                 +" VALUES('" + this.numerofact.getText() + "', '" + this.textcedula.getText()
                     + "', '" + fecha + "', '1')");
                     System.out.print("hola");
                
                    for(int i = 0; i < this.tabla.getRowCount(); i++){
                        this.bd.setStm("INSERT INTO detalle_factura(numero_factura,cod_producto, cant, precio_venta) "
                        + " VALUES('" + this.numerofact.getText() + "', '" + String.valueOf(this.tabla.getValueAt(i, 0))
                        + "', '" + String.valueOf(this.tabla.getValueAt(i, 5)) + "', '"+ String.valueOf(this.tabla.getValueAt(i, 6)) + "')");
                    }
                    
                
                JOptionPane.showMessageDialog(this, "Factura Guardada!!", "Informacion",  JOptionPane.INFORMATION_MESSAGE);
                BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Se ha guardado una factura");

                this.limpiar();
                
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                BitacoraVentanas.LOG_RAIZ.log(Level.CONFIG, "Error al guardar una factura en la base de datos:{0}", ex.getMessage());

            }
            
        }else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente o factura primero!!!!", "ERROR", JOptionPane.ERROR_MESSAGE);
            BitacoraVentanas.LOG_RAIZ.log(Level.WARNING, "Error al seleccionar los datos del cliente");

        }
            
            }

    private void activar() {
     if(this.vadid.campos(lcampos) && this.tabla.getRowCount() != 0){
            try{
                this.bd.Conectar();
                this.bd.setStm("UPDATE factura SET status = '1' WHERE cod_factura = '" + this.numerofact.getText() + "'");
                
            } catch(SQLException ex){
               BitacoraVentanas.LOG_RAIZ.log(Level.CONFIG, "Error al activar una factura:{0}", ex.getMessage());

            }
        }else{
         JOptionPane.showMessageDialog(this, "Debe llenar todos los campos!!!", "ERROR", JOptionPane.ERROR_MESSAGE);
         BitacoraVentanas.LOG_RAIZ.log(Level.INFO, "Error al llenar los campos");

     }
    }

    private void verificarUsuario(String cod_nivel) {
        if(!cod_nivel.equalsIgnoreCase("1")){
            this.JBtn_activar.setVisible(false);
        }else{
            this.JBtn_activar.setVisible(true);                
                    
        }
    }
}
